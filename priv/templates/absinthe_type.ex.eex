defmodule <%= Macro.camelize(app_name) %>.Types.<%= Macro.camelize(type_name) %> do
  <%= if moduledoc do %>
    @moduledoc "<%= moduledoc %>"
  <% else %>
    @moduledoc false
  <% end %>
  use Absinthe.Schema.Notation

  import Absinthe.Resolution.Helpers, only: [dataloader: 1]

  <%= for enum <- enums do %>
    enum :<%= Macro.underscore(enum.name) %> do
      <%= for value <- enum.values do %>
        value :<%= value %> <% end %>
    end
  <% end %>

  <%= for object <- objects do %>
    object :<%= object.name %> do
      <%= for field <- object.fields do %>
          <%= if field.resolver do %> field :<%= Macro.underscore(field.name) %>, <%= Macro.underscore(field.type) %>, resolve: <%= field.resolver %>
            <% else %> field :<%= Macro.underscore(field.name) %>, <%= Macro.underscore(field.type) %><% end %><% end %>
    end
  <% end %>
end
