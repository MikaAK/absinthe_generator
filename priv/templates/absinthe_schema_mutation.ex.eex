defmodule <%= app_name %>.Schema.Mutations.<%= Macro.camelize(mutation_name) %> do
  <%= if moduledoc do %>
    @moduledoc "<%= moduledoc %>"
  <% else %>
    @moduledoc false
  <% end %>
  use Absinthe.Schema.Notation

  alias <%= app_name %>.Resolvers

  object :<%= mutation_name %>_mutations do
    <%= for mutation <- mutations do %>
      @desc "<%= mutation.description %>"
      field :<%= mutation.name %>, <%= mutation.return_type %> do
        <%= for argument <- mutation.arguments do %>
          arg :<%= argument.name %>, <%= argument.type %><% end %>

        <%= for middleware <- mutation.pre_middleware do %>
          middleware <%= middleware %><% end %>

        resolve <%= mutation.resolver_module_function %>

        <%= for middleware <- mutation.post_middleware do %>
          middleware <%= middleware %><% end %>
      end
    <% end %>
  end
end

